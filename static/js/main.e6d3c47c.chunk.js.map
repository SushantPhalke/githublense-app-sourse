{"version":3,"sources":["Components/Layout/Navbar.js","Components/Layout/spinner34.gif","Components/Layout/LoadingSpinner.js","Components/users/UserItem.js","Components/users/Users.js","Components/Layout/BrandName.js","Components/Layout/search34.gif","Components/Layout/Finder.js","Components/users/Search.js","Components/Layout/Alert.js","Components/Pages/About.js","Components/users/User.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","id","icon","to","home","about","defaultProps","useer","LoadingSpinner","src","spinner34","alt","style","width","margin","UserItem","user","avatar_url","login","href","html_url","target","rel","propType","PropTypes","array","Users","users","loading","map","BrandName","title","Finder","search34","justifyContent","textAlign","Search","useState","text","setText","onSubmit","event","preventDefault","setAlert","searchUsers","type","name","value","placeholder","onChange","showClear","onClick","clearUsers","showFinder","Alert","alert","msg","Profile","User","Component","App","state","a","setState","axios","get","process","res","data","items","getUser","username","setTimeout","exact","path","this","length","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e6d3c47c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Navbar.css';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = (props) => {\r\n    return (\r\n        <nav className='navbar'>\r\n            <div className='navbar-content'>\r\n                <i id='navbar-icon' className={props.icon} />\r\n                <Link to='/'><div className='navbar-btn'>{props.home}</div></Link>\r\n                <Link to='About'><div className='navbar-btn'>{props.about}</div></Link>\r\n                \r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n    home: 'Home',\r\n    about: 'About',\r\n    useer:'User',\r\n    icon: 'fa fa-github',\r\n};\r\nNavbar.propTypes = {\r\n    home: PropTypes.string.isRequired,\r\n    icon: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Navbar;\r\n","export default __webpack_public_path__ + \"static/media/spinner34.5b35cef0.gif\";","import React from 'react';\r\nimport spinner34 from \"./spinner34.gif\";\r\n\r\nexport const LoadingSpinner = () => {\r\n    return (\r\n        <div className='container' >\r\n            <p id='mining'>Mining...</p>\r\n            <img\r\n                src={spinner34}\r\n                alt='Loading...'\r\n                style={{ width: '200px', margin: 'auto' }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst UserItem = (props) => {\r\n    return (\r\n        <div className='card text-center'>\r\n            <img\r\n                src={props.user?.avatar_url}\r\n                alt='img is not avilable'\r\n                className='round-img'\r\n                style={{ width: '60px' }}\r\n            />\r\n            <h3>{props.user?.login}</h3>\r\n            <a\r\n                href={props.user?.html_url}\r\n                target='_blank'\r\n                rel='noreferrer'\r\n                className='btn btn-dark btn-sm my-1'\r\n            >\r\n                More\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\nUserItem.propType = {\r\n    user: PropTypes.array,\r\n};\r\nexport default UserItem;\r\n","import React from 'react';\r\nimport { LoadingSpinner } from '../Layout/LoadingSpinner';\r\nimport UserItem from './UserItem';\r\nimport PropTypes from 'prop-types';\r\nconst Users = ({ users, loading }) => {\r\n    if (loading) {\r\n        return (\r\n            <div className='user-container'>\r\n                <LoadingSpinner />\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='grid-3'>\r\n                {users.map((user) => (\r\n                    <UserItem key={user.id} user={user} />\r\n                ))}\r\n            </div>\r\n        );\r\n    }\r\n};\r\nUsers.propTypes = {\r\n    loading: PropTypes.bool,\r\n    users: PropTypes.array,\r\n};\r\n\r\nexport default Users;\r\n","import React from 'react';\r\n\r\nexport default function BrandName(props) {\r\n    return <div className='brand-name'>{props.title}</div>;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/search34.29e3b455.gif\";","import React from 'react';\r\nimport search34 from './search34.gif';\r\n\r\nexport const Finder = (props) => {\r\n    return (\r\n        <div className='user-container'>\r\n            <img\r\n                src={search34}\r\n                alt='Use Search Bar....'\r\n                style={{\r\n                    width: '200px',\r\n                    margin: 'auto',\r\n                    justifyContent: 'center',\r\n                    textAlign: 'center',\r\n                }}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import { React, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Finder } from '../Layout/Finder';\r\n\r\nexport default function Search(props) {\r\n    const [text, setText] = useState('');\r\n\r\n    const onChangeHandle = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n    const onSubmitHandle = (event) => {\r\n        event.preventDefault();\r\n        if (text === '') {\r\n            props.setAlert('Username Field should not be blank', 'light');\r\n        } else {\r\n            props.searchUsers(text);\r\n            setText('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className='search-console'>\r\n                <form className='form' onSubmit={onSubmitHandle}>\r\n                    <input\r\n                        id='username-input'\r\n                        type='text'\r\n                        name='text'\r\n                        value={text}\r\n                        placeholder='Enter Username...'\r\n                        onChange={onChangeHandle}\r\n                    />\r\n                    <input\r\n                        type='submit'\r\n                        value='Search'\r\n                        className='btn btn-dark'\r\n                    />\r\n\r\n                    {props.showClear && (\r\n                        <button\r\n                            className='btn btn-dark'\r\n                            onClick={props.clearUsers}\r\n                        >\r\n                            Clear\r\n                        </button>\r\n                    )}\r\n                </form>\r\n            </div>\r\n            {props.showFinder && (\r\n                <div>\r\n                    <Finder />\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n}\r\nSearch.propTypes = {\r\n    searchUsers: PropTypes.func,\r\n    onClearHandle: PropTypes.func,\r\n    showClear:PropTypes.bool,\r\n    showFinder:PropTypes.bool\r\n};\r\n","import React from 'react'\r\n\r\nexport const Alert = ({ alert }) => {\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className='fa fa-info-circle' /> {alert.msg}\r\n\r\n      </div>\r\n    )\r\n  )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Profile() {\r\n    return (\r\n        <div>\r\n            <div className='user-container'>\r\n                <div id='name'>\r\n                    <hr />\r\n                    <h1>Sushant Phalke</h1>\r\n                    <hr />\r\n                </div>\r\n                <div id='user-container'>\r\n                    <div id='childdiv1'>\r\n                        <strong>SUSHANT BABASAHEB PHALKE</strong>\r\n                        <br />\r\n                        🌐 Computer science Engineer <br />\r\n                        🔰 Government College of Engineering <br />\r\n                        🔯 Full Stack Developer <br />\r\n                        🏰 UI / UX Design\r\n                    </div>\r\n\r\n                    <div id='childdiv2'>\r\n                        <div className='details'>\r\n                            <img\r\n                                id='photo'\r\n                                src='https://github.com/SushantPhalke/textutilsapp/blob/main/sushant_phalke%20photo.jpg?raw=true'\r\n                                alt=''\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id='childdiv3'></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class User extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        User\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import './App.css';\nimport React, { Component } from 'react';\nimport Navbar from './Components/Layout/Navbar';\nimport Users from './Components/users/Users';\nimport axios from 'axios';\nimport BrandName from './Components/Layout/BrandName';\nimport Search from './Components/users/Search';\nimport { Alert } from './Components/Layout/Alert';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Profile from './Components/Pages/About';\nimport User from './Components/users/User';\n\nclass App extends Component {\n    state = {\n        users: [],\n        user: {},\n        loading: false,\n        alert: null,\n    };\n\n    // async componentDidMount() {\n    //     console.log(process.env.REACT_APP_GITHUB_CLIENT_SECRET);\n    //     this.setState({ loading: true });\n    //     const res = await axios.get(`https://api.github.com/users?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client?secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`);\n    //     this.setState({ users: res.data, loading: false });\n    // }\n\n    //search github users\n    searchUsers = async (text) => {\n        this.setState({ loading: true });\n        const res = await axios.get(\n            `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client?secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        this.setState({ users: res.data.items, loading: false });\n    };\n\n    //get a single gihub user\n    getUser = async (username) => {\n        this.setState({ loading: true });\n        const res = await axios.get(\n            `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client?secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\n        );\n        this.setState({ user: res.data, loading: false });\n    };\n\n    //clear users from window\n    clearUsers = () => {\n        this.setState({ users: [], loading: false });\n    };\n\n    setAlert = (msg, type) => {\n        this.setState({ alert: { msg: msg, type: type } });\n        setTimeout(() => this.setState({ alert: null }), 2000);\n    };\n\n    render() {\n        return (\n            <Router>\n                <div className='App'>\n                    <Switch>\n                        <Route exact path='/'>\n                            <div className='brand-and-nav'>\n                                <Navbar\n                                    home='Home'\n                                    about='About Me'\n                                    icon='fa fa-github'\n                                />\n                                <BrandName title={'GitHub Lense'} />\n                                <div className='search-users'>\n                                    <Alert alert={this.state.alert} />\n                                    <Search\n                                        searchUsers={this.searchUsers}\n                                        clearUsers={this.clearUsers}\n                                        showClear={\n                                            this.state.users.length > 0\n                                                ? true\n                                                : false\n                                        }\n                                        showFinder={\n                                            this.state.users.length === 0\n                                                ? true\n                                                : false\n                                        }\n                                        setAlert={this.setAlert}\n                                    />\n                                </div>\n                            </div>\n                            <div className='search-users'>\n                                <div className='user-container'>\n                                    <Users\n                                        loading={this.state.loading}\n                                        users={this.state.users}\n                                    />\n                                </div>\n                            </div>\n                        </Route>\n                        <Route path='/About'>\n                            <div className='brand-and-nav'>\n                                <Navbar\n                                    home='Home'\n                                    about='About Me'\n                                    icon='fa fa-github'\n                                />\n                                <BrandName title={'GitHub Lense'} />\n                                <div>\n                                    <Profile />\n                                </div>\n                            </div>\n                        </Route>\n                        <Route\n                            exact\n                            path='/user/:login'\n                            render={(props) => (\n                                <User\n                                    {...props}\n                                    getUser={this.getUser}\n                                    user={this.state.user}\n                                    loading={this.state.loading}\n                                />\n                            )}\n                        />\n                    </Switch>\n                </div>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}